package manager;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.EntityManager;

import model.Kupovina;
import model.Osoba;
import model.Stavka;

public class KupovinaManager {
	public static boolean izvrsiKupovinu(int idOsoba, String idDostavaStr) {
		EntityManager em = JPAUtil.getEntityManager();
		em.getTransaction().begin();
		try {
			Integer idDostava = Integer.parseInt(idDostavaStr);
			Osoba osoba = OsobaManager.getOsobaById(idOsoba);
			List<Stavka> listaStavki = osoba.getStavkas();
			if(listaStavki.isEmpty() || listaStavki==null) {
				return false;
			}
			Kupovina kupovina = new Kupovina();
			kupovina.setDatum(new Date());
			kupovina.setOsoba(OsobaManager.getOsobaById(idOsoba));
			kupovina.setDostava(DostavaManager.getDostavaById(idDostava));
			em.persist(kupovina);
			em.flush();
			List<Kupovina> kupovinas = new ArrayList<>();
			kupovinas.add(kupovina);
			for (Stavka stavka : listaStavki) {
				Stavka st = em.find(Stavka.class, stavka.getIdStavka());
				st.setOsobas(new ArrayList<>());
				st.setKupovinas(kupovinas);
				em.merge(stavka);
			}

			em.getTransaction().commit();
			em.close();
			return true;
		}catch(Exception e) {
			e.printStackTrace();
			em.close();
			return false;
		}
	}
	
	public static List<Kupovina> listaKupovina(){
		EntityManager em = JPAUtil.getEntityManager();
		return em.createQuery("SELECT k FROM Kupovina k").getResultList();
	}
	
	public static List<Kupovina> listaKupovinaKompanije(int idKompanije){
		EntityManager em = JPAUtil.getEntityManager();
		return em.createNativeQuery("SELECT * FROM shopdb.kupovina_has_stavka ks\r\n" + 
				"INNER JOIN stavka on stavka.id_stavka=ks.stavka_id_stavka\r\n" + 
				"INNER JOIN stvari on stvari.id_stvari=stavka.stvari_id_stvari\r\n" + 
				"INNER JOIN kompanija on stvari.kompanija_id_kompanija=kompanija.id_kompanija\r\n" + 
				"WHERE kompanija.id_kompanija=:'idKompanije' group by ks.kupovina_id_kupovina;").setParameter("idKompanije",idKompanije ).getResultList();
	}

	public static void main(String[] args) {
		List<Kupovina> listaKupovina =listaKupovinaKompanije(1);
		listaKupovina.forEach(kups->System.out.println(kups.getIdKupovina()));
	}
}