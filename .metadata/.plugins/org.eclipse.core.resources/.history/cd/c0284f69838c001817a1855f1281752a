package manager;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;

import model.Osoba;
import model.Stavka;
import model.Stvari;

public class StavkaManager {
	
	public static boolean dodajUKorpu(Osoba osoba, String idStvariStr) {
		EntityManager em = JPAUtil.getEntityManager();
		em.getTransaction().begin();
		try {
			List<Stavka> listaStavki = osoba.getStavkas();
			Integer idStvari = Integer.parseInt(idStvariStr);
			if(listaStavki!=null) {
				for (Stavka stavka : listaStavki) {
					if(stavka.getStvari().getIdStvari()==idStvari) {
						System.out.println(stavka.getStvari().getNaziv());
						stavka.setKolicina(stavka.getKolicina()+1);
						em.merge(stavka);
						em.getTransaction().commit();
						em.close();
						return true;
					}
				}
			}else{
				listaStavki = new ArrayList<>();
			}
			Stavka stavka = new Stavka();
			Stvari stvar = StvariManager.getStvarById(idStvari);
			stavka.setKolicina(1);
			stavka.setStvari(stvar);
			List<Osoba> listaOsoba = new ArrayList<>();
			listaOsoba.add(osoba);
			stavka.setOsobas(listaOsoba);
			em.merge(stavka);
			em.getTransaction().commit();
			em.close();
			return true;
		}catch(Exception e) {
			em.close();
			return false;
		}
	}
	
	public static int cenaStavkiOsobe(Osoba osoba) {
		List<Stavka> listaStavki = osoba.getStavkas();
		if(listaStavki==null) {
			return 0;
		}
		int suma=0;
		for (Stavka stavka : listaStavki) {
			suma+=stavka.getKolicina()*stavka.getStvari().getCena();
		}
		return suma;
	}
	
	public static Stavka getStavkaById(String idStr) {
		EntityManager em = JPAUtil.getEntityManager();
		try {
			Integer id=Integer.parseInt(idStr);
			return (Stavka) em.createQuery("SELECT s FROM Stavka s WHERE s.idStavka=:id").setParameter("id", id).getSingleResult();
		}catch(Exception e) {
			return null;
		}
	}
	
	public static boolean ukloniIzKorpe(String idStr, Osoba osoba) {
		EntityManager em = JPAUtil.getEntityManager();
		em.getTransaction().begin();
		try {
			Stavka stavka = getStavkaById(idStr);
			if(stavka.getKolicina()>1) {
				stavka.setKolicina(stavka.getKolicina()-1);
				em.merge(stavka);
			}else {
				List<Osoba> listaOsoba = stavka.getOsobas();
				listaOsoba.remove(osoba.getIdOsoba());
				stavka.setOsobas(listaOsoba);
				em.persist(stavka);
			}
			em.getTransaction().commit();
			em.close();
			return true;
		}catch(Exception e) {
			em.close();
			e.printStackTrace();
			return false;
		}
	}
	public static void main(String[] args) {
		Osoba osoba = OsobaManager.getOsobaById(1);
		String id="1";
		dodajUKorpu(osoba,id);
	}
}
